
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.MyWorkerScalarFieldEnum = {
  name: 'name',
  mobileNumber: 'mobileNumber',
  profilePhoto: 'profilePhoto',
  photo: 'photo',
  video: 'video',
  dailyWage: 'dailyWage',
  address: 'address',
  rating: 'rating',
  occupation: 'occupation',
  feedback: 'feedback',
  pastDeals: 'pastDeals',
  presentDeals: 'presentDeals',
  age: 'age',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  id: 'id',
  email: 'email',
  password: 'password',
  lat: 'lat',
  lng: 'lng'
};

exports.Prisma.MyVendorScalarFieldEnum = {
  ownerName: 'ownerName',
  mobileNumber: 'mobileNumber',
  profilePhoto: 'profilePhoto',
  shopName: 'shopName',
  shopPhoto: 'shopPhoto',
  email: 'email',
  password: 'password',
  address: 'address',
  rating: 'rating',
  bussinessType: 'bussinessType',
  feedback: 'feedback',
  gstNumber: 'gstNumber',
  age: 'age',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  id: 'id',
  lat: 'lat',
  lng: 'lng'
};

exports.Prisma.MyUserScalarFieldEnum = {
  name: 'name',
  mobileNumber: 'mobileNumber',
  profilePhoto: 'profilePhoto',
  work: 'work',
  email: 'email',
  address: 'address',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  id: 'id',
  password: 'password',
  lat: 'lat',
  lng: 'lng'
};

exports.Prisma.WorkScalarFieldEnum = {
  id: 'id',
  workType: 'workType',
  description: 'description',
  isActive: 'isActive',
  photos: 'photos',
  alternateNumber: 'alternateNumber',
  workId: 'workId',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  MyWorker: 'MyWorker',
  MyVendor: 'MyVendor',
  MyUser: 'MyUser',
  Work: 'Work'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\Projects\\KaamBazar\\kambazar\\prisma\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\Projects\\KaamBazar\\kambazar\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"./generated/client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel MyWorker {\n  name         String?  @db.VarChar(50)\n  mobileNumber String?  @db.VarChar(10)\n  profilePhoto String?  @default(\"\")\n  photo        String?  @default(\"\")\n  video        String?  @default(\"\")\n  dailyWage    Float?   @default(0)\n  address      String?  @db.VarChar(255)\n  rating       Float?   @default(0)\n  occupation   String?  @default(\"\")\n  feedback     String?  @default(\"\")\n  pastDeals    String[]\n  presentDeals String[]\n  age          Int?\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n  id           String   @id @default(uuid())\n  email        String   @unique\n  password     String   @default(\"\")\n  lat          Float?   @default(0.0)\n  lng          Float?   @default(0.0)\n}\n\nmodel MyVendor {\n  ownerName     String?  @db.VarChar(50)\n  mobileNumber  String?  @db.VarChar(10)\n  profilePhoto  String?  @default(\"\")\n  shopName      String?  @db.VarChar(100)\n  shopPhoto     String?  @default(\"\")\n  email         String?  @unique @db.VarChar(50)\n  password      String?  @default(\"\")\n  address       String?  @db.VarChar(255)\n  rating        Float?   @default(0)\n  bussinessType String?  @default(\"\")\n  feedback      String?  @default(\"\")\n  gstNumber     String?  @db.VarChar(20)\n  age           Int?\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n  id            String   @id @default(uuid())\n  lat           Float?   @default(0.0)\n  lng           Float?   @default(0.0)\n}\n\nmodel MyUser {\n  name         String?  @db.VarChar(50)\n  mobileNumber String?  @db.VarChar(10)\n  profilePhoto String?  @default(\"\")\n  work         String[]\n  email        String?  @unique\n  address      String?  @default(\"\")\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n  id           String   @id @default(uuid())\n  password     String   @default(\"\")\n  lat          Float?   @default(0.0)\n  lng          Float?   @default(0.0)\n  works        Work[]\n}\n\nmodel Work {\n  id              String   @id @default(uuid())\n  workType        String\n  description     String\n  isActive        Boolean  @default(true)\n  photos          String[]\n  alternateNumber String?\n  workId          String\n  createdAt       DateTime @default(now())\n  user            MyUser   @relation(fields: [workId], references: [id])\n}\n",
  "inlineSchemaHash": "f695befb6798edf0abea4a8422e7e7389c470c5c78f117893172d5b5ca31739c",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"MyWorker\":{\"fields\":[{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mobileNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profilePhoto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"video\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dailyWage\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"occupation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"feedback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pastDeals\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"presentDeals\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"age\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lat\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lng\",\"kind\":\"scalar\",\"type\":\"Float\"}],\"dbName\":null},\"MyVendor\":{\"fields\":[{\"name\":\"ownerName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mobileNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profilePhoto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopPhoto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"bussinessType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"feedback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gstNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"age\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lat\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lng\",\"kind\":\"scalar\",\"type\":\"Float\"}],\"dbName\":null},\"MyUser\":{\"fields\":[{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mobileNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profilePhoto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"work\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lat\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lng\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"works\",\"kind\":\"object\",\"type\":\"Work\",\"relationName\":\"MyUserToWork\"}],\"dbName\":null},\"Work\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"photos\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"alternateNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"MyUser\",\"relationName\":\"MyUserToWork\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

